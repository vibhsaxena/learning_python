
range(1,6) will have you 1,2,3,4,5. Not 6.

using list and range
''''
squares=[]
for value in range(1,11):
    squares.append(value**2)
    #print(value)
    print(squares)
    
 # note the power function here. <value>**power   
''''
[1]
[1, 4]
[1, 4, 9]
[1, 4, 9, 16]
[1, 4, 9, 16, 25]
[1, 4, 9, 16, 25, 36]
[1, 4, 9, 16, 25, 36, 49]
[1, 4, 9, 16, 25, 36, 49, 64]
[1, 4, 9, 16, 25, 36, 49, 64, 81]
[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]

------------

#to hop the items in the function range 

even_numbers=list(range(2,11,2))
print(even_numbers)

[2, 4, 6, 8, 10]
-----------

#min max sum functions
print(min(squares))
print(max(squares))
print(sum(squares))

1
1000
3025

------

#list comprehension
cubes=[cube**3 for cube in range(1,11)]
print(cubes)

[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]

--------

#Slices

squares=[value**2 for value in range(1,6)]
#first three elements in the list
print(squares[:3])
[1, 4, 9]
#last three elements in the list
print(squares[-3:])
[9, 16, 25]
 
 -------
 
user='test'
users=['tester','rester','toaster']
if user in users:
    print("there is")
else:
    print("ain't")
-------

